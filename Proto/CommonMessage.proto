syntax = "proto3";
package ETModel;
enum OpRetCode 
{
	Success=0;
	Room_Already_In=200001;
	Room_Already_Full=200002;
	Room_State_Ban=200003;
	Room_Not_Exist=200004;
	Login_Param_Error=200005;
	Login_AccPwd_Error=200006;
	Account_Already_Exist=200007;
	Account_MaxUserId_Error=200008;
	User_GetInfo_Error = 200009;
	Room_Not_Enough_Coin = 200010;
	Room_Too_Much_Coin = 200011;
	Room_Already_Gaming = 200012;
	Room_Already_Out =200013;
	Match_Already_In =200014;
	Match_Already_Out=200015;
	Verify_Key_Invalid = 200016;
	GateUser_Not_Exist = 200017;
	Kick_Other_Login = 200018;
	CreateRoom_Already_IN=200019;
	Match_Is_Closed = 200020;
	Room_Is_Closed = 200021;
	Room_Config_Error=200022;
	Game_Op_Invalid = 200023;
	
}

enum PlayerState //玩家复合状态位: 值是2^n次方,n从0开始
{
	NONE=0;
	ONLINE= 1;
	READY= 2;
	AUTO= 4; //托管
	CHECK = 8; //已看牌
	FOLD= 16; //弃牌
	LEAVE= 32; //暂离
	AUDIENCE=64; //观众
}

enum GameId
{
	Default = 0;
	BullFight= 1;
}

message CS_Ping // IRequest
{
	int32 RpcId = 90;
}

message SC_Ping // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message CS_Register // IRequest
{
	int32 RpcId=1;
	string Account = 2;
	string Password = 3;
	string Name=4;
}

message SC_Register // IResponse
{
	int32 RpcId=1;
	int32 Error=2;
	string Message = 3;
	string Address=4;
	string key =5;
}


message CS_Login // IRequest
{
	int32 RpcId=1;
	int32 LoginType =2;
	int32 PlatformType = 3;
	string DataStr = 4;
}

message SC_Login // IResponse
{
	int32 RpcId=1;
	int32 Error=2;
	string Message = 3;
	string Address=4;
	string key =5;
}

message CS_VerifyKey // IRequest
{
	int32 RpcId =1;
	string key =2;
}

message SC_VerifyKey //IResponse
{
	int32 RpcId=1;
	int32 Error=2;
	string Message = 3;
}

message UserInfo //IMessage
{
	int32 UserId=1;
	int32 Level=2;
	int32 Coin=3;
	int32 Head=4;
	string Name=5;
}
//游戏配置:控制游戏是否开启,房间模式等
message GameConfig //IMessage
{
	int64 HallId = 1;
	int32 GameId = 2;
	int32 GameMode = 3;
	int32 State = 4;
	int32 RoomType = 5;
	int32 MinLimitCoin = 6;
	int32 MaxLimitCoin = 7;
}

message SC_PlayerData //IActorMessage
{
	int32 GameId = 1;
	int32 RoomId = 2;
	int64 ActorId = 3;
	UserInfo UserInfo = 4;
	repeated GameConfig GameCfgList = 5;
}

message CS_UserInfo //IRequest
{
	int32 RpcId = 1;
	int32 UserId = 2;
}

message SC_UserInfo //IResponse
{
	int32 RpcId = 1;
	int32 Error=2;
	string Message = 3;
	UserInfo UserInfo=4;
}

message SC_KickUser //IMessage
{
	int32 Error=2;
	string Message = 3;
}

message MatchRoom
{
	int32 RoomId =1;
	int32 State =2;
	int32 Count =3;
}

message CS_RoomList //IUserRequest
{
	int32 RpcId = 1;
	int32 HallId = 2;
	int32 UserId = 3;
	int64 GateSessionId = 5;
}

message SC_RoomList //IResponse
{
	int32 RpcId = 1;
	int32 Error=2;
	string Message = 3;
	int32 HallId = 4;
	repeated MatchRoom List=5;
}

message CS_CreateRoomList //IUserRequest
{
	int32 RpcId = 1;
	int32 UserId = 2;
	int64 GateSessionId = 3;
}

message SC_CreateRoomList //IResponse
{
	int32 RpcId = 1;
	int32 Error=2;
	string Message = 3;
	repeated MatchRoom List=4;
}


message CS_EnterRoom //IUserRequest
{
	int32 RpcId = 1;
	int32 RoomId = 2;
	int32 UserId =3;
	int64 GateSessionId = 5;
}

message SC_EnterRoom //IResponse
{
	int32 RpcId = 1;
	int32 Error=2;
	string Message = 3;
}


message CS_LeaveRoom //IActorRequest
{
	int32 RpcId = 1;
	int64 ActorId = 2;
}

message SC_LeaveRoom //IActorResponse
{
	int32 RpcId = 1;
	int32 Error=2;
	string Message = 3;
}

message CS_CreateRoom //IUserRequest
{
	int32 RpcId = 1;
	int32 UserId =2;
	int64 GateSessionId = 3;
	int32 GameId = 4;
	int32 GameMode = 5;
	int32 HallType = 6;
	string Params = 7; //自定义参数
}

message SC_CreateRoom //IResponse
{
	int32 RpcId = 1;
	int32 Error=2;
	string Message = 3;
	int32 RoomId = 4;
}

message CS_DisbandRoom //IUserRequest
{
	int32 RpcId = 1;
	int32 UserId =2;
	int64 GateSessionId = 3;
	int32 RoomId = 4;
}

message SC_DisbandRoom //IResponse
{
	int32 RpcId = 1;
	int32 Error=2;
	string Message = 3;
}

message GamePlayerData //IMessage
{
	int32 UserId = 1;
	int32 Head = 3;
	int32 Coin = 4;
	int32 Pos =5;
	string Name = 6;
	PlayerState State = 7;
}

message GameRoomData //IMessage
{
	int32 RoomId = 1;
	int32 State = 2;
	int32 RoomType = 3;
	int32 GameId = 4;
	int32 GameMode = 5;
	int32 HallType = 6;
}

message SC_GameRoomInfo //IActorMessage
{
	int64 ActorId = 1;
	GameRoomData roomInfo = 2;
}

message SC_PlayerLeave //IActorMessage
{
	int64 ActorId = 1;
	int32 UserId = 2;
}

//服务器主动踢玩家出房间
message SC_KickPlayer //IActorMessage
{
	int64 ActorId = 1;
	int32 Reason = 2; //0:主动退出 1 游戏结束自动退出  2 强制退出
}

message SC_RoomListChanged //IActorMessage
{
	int64 ActorId = 1;
	repeated MatchRoom List =2;
}

message CS_EnterScene //IUserRequest
{
	int32 RpcId = 1;
	int32 HallId = 2;
	int32 UserId =3;
	int64 GateSessionId = 5;
}

message SC_EnterScene //IResponse
{
	int32 RpcId = 1;
	int32 Error=2;
	string Message = 3;
}

message CS_LeaveScene //IUserRequest
{
	int32 RpcId = 1;
	int32 UserId = 2;
	int64 GateSessionId = 3;
}

message SC_LeaveScene //IResponse
{
	int32 RpcId = 1;
	int32 Error=2;
	string Message = 3;
}

message SC_CoinChange //IActorMessage
{
	int64 ActorId = 1;
	int32 Pos =2;
	int32 ChangeCoin = 3;
	int32 TotalCoin = 4;
}

message CS_GetRoomInfo //IActorRequest
{
	int32 RpcId = 1;
	int64 ActorId = 2;
}












